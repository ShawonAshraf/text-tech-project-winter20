/Tweets/Tweet[@ID="7880"]

Getting the old data.................................
/Tweets/Tweet[translate(created, "-:T", "") > translate("2020-12-30T00:00:00", "-:T", "")
and translate(created, "-:T", "") < translate("2021-01-05T00:00:00", "-:T", "")]

Getting the new data.................................
/Tweets/Tweet[translate(created, "-:T", "") > translate("2021-01-21T00:00:00", "-:T", "")]


XQUErY - Getting the old data based on retweetcount.................................
for $t in /Tweets/Tweet[translate(created, "-:T", "") 
> translate("2020-12-30T00:00:00", "-:T", "") and translate(created, "-:T", "") < translate("2021-01-05T00:00:00", "-:T", "")]
let $x := xs:integer($t/retweetcount)
order by $x descending, $t/created descending
return <TweetAfterRelease>
	{$t/retweetcount}
    {$t/created}
    {$t/text}
	{$t/userlocation}
    </TweetAfterRelease>


XQUErY - Getting the new data based on retweetcount.................................
for $t in /Tweets/Tweet[translate(created, "-:T", "") 
> translate("2021-01-21T00:00:00", "-:T", "")]
let $x := xs:integer($t/retweetcount)
order by $x descending, $t/created descending
return <TweetAfterRelease>
	{$t/retweetcount}
    {$t/created}
    {$t/text}
	{$t/userlocation}
    </TweetAfterRelease>


XQUErY - Getting Tweets grouped by the userlocation.................................
for $t in /Tweets/Tweet
let $g := $t/userlocation 
group by $g
order by $g
return <Location userlocation="{$g}">
        {for $i in $t
          let $x := xs:integer($i/retweetcount)
            order by $x descending, $i/created descending
          return <Tweet ID="{$i/@ID}">{$i/retweetcount}{$i/text}</Tweet>
        }
       </Location>


XQUErY - Count of Hashtags.................................
for $groupedHashTags in (
  for $x in /Tweets/Tweet/tokenize(text,'#')[position() = (2 to 1000)]
  for $hashtag in tokenize($x, ' ')[position() = (1)]
  return <result>{$hashtag}</result>
)
let $full := $groupedHashTags
group by $full
let $count := count($groupedHashTags)
order by $count descending
return <HashTag>
        <Tag>{$full}</Tag>
        <Count>{$count}</Count>
       </HashTag>

XQUErY - Count of Location.................................
for $x in /Tweets/Tweet
let $l := $x/userlocation
group by $l
let $count := count($x)
order by $count descending
return <Location>
          <Name>{$l}</Name>
          <Count>{$count}</Count>
       </Location>


XQUERY - Tweets that contain the word "bug"....................................
for $t in /Tweets/Tweet[contains(lower-case(text), 'bug')]
order by $t/retweetcount descending, $t/created descending
return <BugTweets>{$t}</BugTweets>


XQUERY - Tweets that contain the word "bug" count............................
let $c := count(/Tweets/Tweet[contains(lower-case(text), 'bug')])
return <BugTweetsCount>{$c}</BugTweetsCount>