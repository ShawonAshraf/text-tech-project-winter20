XPATH - Getting Tweet Based on ID
/Tweets/Tweet[@ID="7880"]

XPATH - Getting the old data.................................
/Tweets/Tweet[translate(created, "-:T", "") > translate("2020-12-30T00:00:00", "-:T", "")
and translate(created, "-:T", "") < translate("2021-01-05T00:00:00", "-:T", "")]

GXPATH - etting the new data.................................
/Tweets/Tweet[translate(created, "-:T", "") > translate("2021-01-21T00:00:00", "-:T", "")]


XQUErY - Getting the old data.................................
for $t in /Tweets/Tweet[translate(created, "-:T", "") 
> translate("2020-12-30T00:00:00", "-:T", "") and translate(created, "-:T", "") < translate("2021-01-05T00:00:00", "-:T", "")]
let $x := xs:integer($t/retweetcount)
order by $x descending, $t/created descending
return <TweetAfterRelease>
	{$t/retweetcount}
    {$t/created}
    {$t/text}
	{$t/userlocation}
    </TweetAfterRelease>


XQUErY - Getting the new data.................................
for $t in /Tweets/Tweet[translate(created, "-:T", "") 
> translate("2021-01-21T00:00:00", "-:T", "")]
let $x := xs:integer($t/retweetcount)
order by $x descending, $t/created descending
return <TweetAfterRelease>
	{$t/retweetcount}
    {$t/created}
    {$t/text}
	{$t/userlocation}
    </TweetAfterRelease>


XQUErY - Getting old data grouped by the userlocation.................................
for $t in /Tweets/Tweet[translate(created, "-:T", "") 
> translate("2020-12-30T00:00:00", "-:T", "") and translate(created, "-:T", "") < translate("2021-01-05T00:00:00", "-:T", "")]
let $g := $t/userlocation 
group by $g
order by $g
return <TweetAfterRelease userlocation="{$g}">
	{for $i in $t
    	let $x := xs:integer($i/retweetcount)
        order by $x descending, $i/created descending
    	return $i
    }
    </TweetAfterRelease>



XQUErY - Getting new data grouped by the userlocation.................................
for $t in /Tweets/Tweet[translate(created, "-:T", "") 
> translate("2021-01-21T00:00:00", "-:T", "")]
let $g := $t/userlocation 
group by $g
order by $g
return <TweetAfterRelease userlocation="{$g}">
	{for $i in $t
    	let $x := xs:integer($i/retweetcount)
        order by $x descending, $i/created descending
    	return $i
    }
    </TweetAfterRelease>


XQUErY - Tweets grouped by Hashtags.................................
for $x in /Tweets/Tweet/tokenize(text,'#')[position() = (2 to 1000)]
let $hashtag := tokenize($x, ' ')[position() = (1)]
for $t in /Tweets/Tweet
group by $hashtag
return <HashTags tag="{$hashtag}">
	{for $i in $t
    where $i/contains(text,concat('#',$hashtag))
    return $i
    }
    </HashTags>


XQUERY - Tweets that contains the word "bug"....................................
for $t in /Tweets/Tweet[contains(lower-case(text), 'bug')]
order by $t/retweetcount descending, $t/created descending
return <BugTweets>{$t}</BugTweets>